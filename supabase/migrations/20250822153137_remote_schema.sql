

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE OR REPLACE FUNCTION "public"."update_updated_at_column"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$;


ALTER FUNCTION "public"."update_updated_at_column"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."practice_cards" (
    "id" bigint NOT NULL,
    "topic_id" bigint NOT NULL,
    "content" "text" NOT NULL,
    "inserted_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL
);


ALTER TABLE "public"."practice_cards" OWNER TO "postgres";


ALTER TABLE "public"."practice_cards" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."practice_cards_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."timeline_entries" (
    "id" bigint NOT NULL,
    "topic_id" bigint NOT NULL,
    "scheduled_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "inserted_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL,
    "description" "text" DEFAULT ''::"text" NOT NULL,
    "completed_at" timestamp with time zone
);


ALTER TABLE "public"."timeline_entries" OWNER TO "postgres";


ALTER TABLE "public"."timeline_entries" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."timeline_entries_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."timeline_entry_practice_cards" (
    "id" bigint NOT NULL,
    "timeline_entry_id" bigint NOT NULL,
    "practice_card_id" bigint NOT NULL
);


ALTER TABLE "public"."timeline_entry_practice_cards" OWNER TO "postgres";


ALTER TABLE "public"."timeline_entry_practice_cards" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."timeline_entry_practice_cards_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."topics" (
    "id" bigint NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "notes" "text",
    "stability" integer DEFAULT 1 NOT NULL,
    "retrievability" numeric(5,4) DEFAULT 0.0000 NOT NULL,
    "inserted_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "timezone"('utc'::"text", "now"()) NOT NULL
);


ALTER TABLE "public"."topics" OWNER TO "postgres";


ALTER TABLE "public"."topics" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."topics_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."practice_cards"
    ADD CONSTRAINT "practice_cards_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."timeline_entries"
    ADD CONSTRAINT "timeline_entries_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."timeline_entry_practice_cards"
    ADD CONSTRAINT "timeline_entry_practice_cards_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."topics"
    ADD CONSTRAINT "topics_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."timeline_entry_practice_cards"
    ADD CONSTRAINT "unique_session_card" UNIQUE ("timeline_entry_id", "practice_card_id");



CREATE OR REPLACE TRIGGER "update_practice_cards_updated_at" BEFORE UPDATE ON "public"."practice_cards" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



CREATE OR REPLACE TRIGGER "update_timeline_entries_updated_at" BEFORE UPDATE ON "public"."timeline_entries" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



CREATE OR REPLACE TRIGGER "update_topics_updated_at" BEFORE UPDATE ON "public"."topics" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



ALTER TABLE ONLY "public"."practice_cards"
    ADD CONSTRAINT "practice_cards_topic_id_fkey" FOREIGN KEY ("topic_id") REFERENCES "public"."topics"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."timeline_entries"
    ADD CONSTRAINT "timeline_entries_topic_id_fkey" FOREIGN KEY ("topic_id") REFERENCES "public"."topics"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."timeline_entry_practice_cards"
    ADD CONSTRAINT "timeline_entry_practice_cards_practice_card_id_fkey" FOREIGN KEY ("practice_card_id") REFERENCES "public"."practice_cards"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."timeline_entry_practice_cards"
    ADD CONSTRAINT "timeline_entry_practice_cards_timeline_entry_id_fkey" FOREIGN KEY ("timeline_entry_id") REFERENCES "public"."timeline_entries"("id") ON DELETE CASCADE;





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

























































































































































GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "service_role";


















GRANT ALL ON TABLE "public"."practice_cards" TO "anon";
GRANT ALL ON TABLE "public"."practice_cards" TO "authenticated";
GRANT ALL ON TABLE "public"."practice_cards" TO "service_role";



GRANT ALL ON SEQUENCE "public"."practice_cards_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."practice_cards_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."practice_cards_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."timeline_entries" TO "anon";
GRANT ALL ON TABLE "public"."timeline_entries" TO "authenticated";
GRANT ALL ON TABLE "public"."timeline_entries" TO "service_role";



GRANT ALL ON SEQUENCE "public"."timeline_entries_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."timeline_entries_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."timeline_entries_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."timeline_entry_practice_cards" TO "anon";
GRANT ALL ON TABLE "public"."timeline_entry_practice_cards" TO "authenticated";
GRANT ALL ON TABLE "public"."timeline_entry_practice_cards" TO "service_role";



GRANT ALL ON SEQUENCE "public"."timeline_entry_practice_cards_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."timeline_entry_practice_cards_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."timeline_entry_practice_cards_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."topics" TO "anon";
GRANT ALL ON TABLE "public"."topics" TO "authenticated";
GRANT ALL ON TABLE "public"."topics" TO "service_role";



GRANT ALL ON SEQUENCE "public"."topics_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."topics_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."topics_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
